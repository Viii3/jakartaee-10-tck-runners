<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>fish.payara.jakarta.tests.tck</groupId>
        <artifactId>tck</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>messaging-tck</artifactId>

    <properties>
        <tck.artifactId>jakarta.jms-tck</tck.artifactId>
        <admin.user>admin</admin.user>
        <admin.pass>admin</admin.pass>
        <admin.pass.file>${root.tmp.directory}${file.separator}tmp${file.separator}ripassword</admin.pass.file>
        <admin.pass.file.encoded>${admin.pass.file}.encoded</admin.pass.file.encoded>
        <jndi.fs.dir>${root.tmp.directory}${file.separator}tmp${file.separator}ri_admin_objects</jndi.fs.dir>
        <jndi.factory.initial>java.naming.factory.initial=com.sun.jndi.fscontext.RefFSContextFactory</jndi.factory.initial>
        <jndi.provider.url>java.naming.provider.url=file:///${jndi.fs.dir}</jndi.provider.url>
        <ri.home>${payara.home}${file.separator}mq</ri.home>
        <exec.imqusermgr>${ri.home}${file.separator}bin${file.separator}imqusermgr${executable.extension}</exec.imqusermgr>
        <exec.imqusermgr.part2/>
        <exec.imqobjmgr>${ri.home}${file.separator}bin${file.separator}imqobjmgr${executable.extension}</exec.imqobjmgr>
        <exec.imqobjmgr.part2/>
        <exec.imqcmd>${ri.home}${file.separator}bin${file.separator}imqcmd${executable.extension}</exec.imqcmd>
        <exec.imqcmd.part2/>
        <exec.imqbrokerd>${ri.home}${file.separator}bin${file.separator}imqbrokerd${executable.extension}</exec.imqbrokerd>
        <exec.imqbrokerd.part2/>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>common</artifactId>
            <version>${jakarta.tck.common.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>jms-tck</artifactId>
            <version>${jakarta.tck.messaging.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
            <version>${arquillian.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-core</artifactId>
            <version>${arquillian.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-locator</artifactId>
            <version>3.0.3</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>fish.payara.distributions</groupId>
                                    <artifactId>${payara.artifact}</artifactId>
                                    <version>${payara.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>init</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <delete failonerror="false" file="${admin.pass.file}"/>
                                <delete dir="${jndi.fs.dir}" failonerror="false"/>
                                <mkdir dir="${jndi.fs.dir}"/>
                                <echo message="Echoing: imq.imqcmd.password=${admin.pass} &gt;${admin.pass.file}"/>
                                <echo file="${admin.pass.file}" message="imq.imqcmd.password=${admin.pass}"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>initServer</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="Starting server."/>
                                <exec executable="${payara.asadmin}">
                                    <arg line="start-domain"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>encodeAdminPassword</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="Encode admin password in JMS RI or OpenMQ via (imqusermgr) ......"/>
                                <exec executable="${exec.imqusermgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqusermgr.part2}"/>
                                    <arg line="encode -f -src ${admin.pass.file} -target ${admin.pass.file.encoded}"/>
                                </exec>
                                <move file="${admin.pass.file.encoded}" overwrite="true" tofile="${admin.pass.file}"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>startbkr</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="Start JMS RI or OpenMQ Broker via (imqbrokerd) ....."/>
                                <exec executable="${exec.imqbrokerd}" spawn="true">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqbrokerd.part2} -reset store"/>
                                </exec>
                                <echo message="Sleeping 10 seconds ....."/>
                                <sleep seconds="10"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create.tck.users</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="Create user j2ee in JMS RI or OpenMQ via (imqusermgr) ......"/>
                                <exec executable="${exec.imqusermgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqusermgr.part2}"/>
                                    <arg line="add -f -u j2ee -p j2ee -g ${admin.user}"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create.tck.jms.objects</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="Create JMS Queue MY_QUEUE in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l MY_QUEUE -o imqDestinationName=MY_QUEUE -t q"/>
                                    <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                                <echo message="Create JMS Queue MY_QUEUE2 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l MY_QUEUE2 -o imqDestinationName=MY_QUEUE2 -t q"/>
                                    <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                                <echo message="Create JMS Queue testQ0 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l testQ0 -o imqDestinationName=testQ0 -t q"/>
                                    <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                                <echo message="Create JMS Queue testQ1 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l testQ1 -o imqDestinationName=testQ1 -t q"/>
                                    <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                                <echo message="Create JMS Queue testQ2 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l testQ2 -o imqDestinationName=testQ2 -t q"/>
                                    <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                                <echo message="Create JMS Queue testQueue2 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l testQueue2 -o imqDestinationName=testQueue2 -t q"/>
                                    <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                                <echo message="Create JMS Queue Q2 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l Q2 -o imqDestinationName=Q2 -t q"/>
                                    <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                                <echo message="Create JMS Topic MY_TOPIC in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l MY_TOPIC -o imqDestinationName=MY_TOPIC -t t"/>
                                    <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                                <echo message="Create JMS Topic MY_TOPIC2 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l MY_TOPIC2 -o imqDestinationName=MY_TOPIC2 -t t"/>
                                    <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                                <echo message="Create JMS Queue testT0 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l testT0 -o imqDestinationName=testT0 -t t"/>
                                    <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                                <echo message="Create JMS Queue testT1 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l testT1 -o imqDestinationName=testT1 -t t"/>
                                    <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                                <echo message="Create JMS Queue testT2 in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l testT2 -o imqDestinationName=testT2 -t t"/>
                                    <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                                <echo message="Create JMS ConnectionFactory MyConnectionFactory in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l MyConnectionFactory -t cf"/>
                                    <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                                <echo message="Create JMS ConnectionFactory MyQueueConnectionFactory in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l MyQueueConnectionFactory -t qf"/>
                                    <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                                <echo message="Create JMS ConnectionFactory MyTopicConnectionFactory in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l MyTopicConnectionFactory -t tf"/>
                                    <arg line="-j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                                <echo message="Create JMS ConnectionFactory DURABLE_SUB_CONNECTION_FACTORY in JMS RI or OpenMQ object store via (imqobjmgr) ....."/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="-f add -l DURABLE_SUB_CONNECTION_FACTORY -o imqConfiguredClientID=cts"/>
                                    <arg line="-t tf -j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>list.tck.jms.objects</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="List JMS objects in JMS RI or OpenMQ object store via (imgobjmgr) ......"/>
                                <exec executable="${exec.imqobjmgr}">
                                    <env key="IMQ_JAVAHOME" value="${java.home}"/>
                                    <arg line="${exec.imqobjmgr.part2}"/>
                                    <arg line="list -j ${jndi.factory.initial} -j ${jndi.provider.url}"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <executions>
                    <execution>
                        <id>StopDomain1</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>stop-domain</argument>
                            </arguments>
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>StartDomain1</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>start-domain</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Enable Trace requests</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>set</argument>
                                <argument>server-config.network-config.protocols.protocol.http-listener-1.http.trace-enabled=true</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Delete User j2ee</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>--passwordfile</argument>
                                <argument>${project.basedir}/j2ee.pass</argument>
                                <argument>delete-file-user</argument>
                                <argument>j2ee</argument>
                            </arguments>
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Add User j2ee</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>--passwordfile</argument>
                                <argument>${project.basedir}/j2ee.pass</argument>
                                <argument>create-file-user</argument>
                                <argument>--groups</argument>
                                <argument>staff:mgr</argument>
                                <argument>j2ee</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Delete User javajoe</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>--passwordfile</argument>
                                <argument>${project.basedir}/javajoe.pass</argument>
                                <argument>delete-file-user</argument>
                                <argument>javajoe</argument>
                            </arguments>
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Add User javajoe</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>--passwordfile</argument>
                                <argument>${project.basedir}/javajoe.pass</argument>
                                <argument>create-file-user</argument>
                                <argument>--groups</argument>
                                <argument>guest</argument>
                                <argument>javajoe</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>list users</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>list-file-users</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>StopDomain</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>stop-domain</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M5</version>
                <executions>
                    <execution>
                        <id>gf-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>**/ee*/**</exclude>
                            </excludes>
                            <additionalClasspathElements>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.jms-api.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}glassfish-corba-omgapi.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}lib${file.separator}derbyclient.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}lib${file.separator}derby.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}mq${file.separator}lib${file.separator}imq.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}mq${file.separator}lib${file.separator}jms.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}mq${file.separator}lib${file.separator}fscontext.jar</additionalClasspathElement>
                            </additionalClasspathElements>
                            <dependenciesToScan>jakarta.tck:jms-tck</dependenciesToScan>
                            <systemPropertyVariables>
                                <PAYARA_HOME>${payara.home}</PAYARA_HOME>
                                <payara.home>${payara.home}</payara.home>
                                <user>j2ee</user>
                                <password>j2ee</password>
                                <authuser>javajoe</authuser>
                                <authpassword>javajoe</authpassword>
                                <jms_timeout>10000</jms_timeout>
                                <platform.mode>standalone</platform.mode>
                                <webServerHost>localhost</webServerHost>
                                <webServerPort>8080</webServerPort>
                                <vehicle>standalone</vehicle>
                                <user.dir>${root.tmp.directory}${file.separator}tmp</user.dir>
                            </systemPropertyVariables>
                            <environmentVariables>
                                <PAYARA_HOME>${payara.home}</PAYARA_HOME>
                                <payara.home>${payara.home}</payara.home>
                            </environmentVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>